name: Deploy

on:
  workflow_dispatch:
    inputs:
      tag:
        type: string
        description: Which tag to deploy

jobs:
  verify-images:
    name: Verify Images Exist

    runs-on: ubuntu-latest

    steps:
      - name: Verify Image Exists
        run: |
          curl \
            --fail \
            -u "${{ secrets.PRIVATE_DOCKER_USERNAME }}:${{ secrets.PRIVATE_DOCKER_PASSWORD }}" \
            -H "Accept: application/vnd.oci.image.manifest.v1+json" \
            -H "Accept: application/vnd.oci.image.index.v1+json" \
            "https://${{ secrets.PRIVATE_DOCKER_HOST }}/v2/${{ secrets.MADMEME_IMAGE }}/manifests/${{ github.event.inputs.tag }}"

  deploy:
    name: Deploy

    runs-on: ubuntu-latest

    needs:
      - verify-images

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Load kube config
        run: |
          mkdir "${HOME}"/.kube
          echo "${{ secrets.KUBE_CONFIG_64 }}" | base64 -d > "${HOME}/.kube/config"
          chmod 600 "${HOME}/.kube/config"

      - name: Set up Helm
        uses: azure/setup-helm@v4.1.0

      - name: Deploy Madmeme
        run: |
          helm upgrade \
            --install \
            --namespace=${{ secrets.KUBE_NS }} \
            --create-namespace \
            --set "image.repository=${{ secrets.PRIVATE_DOCKER_HOST }}/${{ secrets.MADMEME_IMAGE }}" \
            --set "image.tag=${{ github.event.inputs.tag }}" \
            --set "image.creds.host=${{ secrets.PRIVATE_DOCKER_HOST }}" \
            --set "image.creds.username=${{ secrets.PRIVATE_DOCKER_USERNAME }}" \
            --set "image.creds.password=${{ secrets.PRIVATE_DOCKER_PASSWORD }}" \
            --set "ingress.host=${{ secrets.HOST }}" \
            --set "imgFlipUsername=${{ secrets.IMGFLIP_USERNAME }}" \
            --set "imgFlipPassword=${{ secrets.IMGFLIP_PASSWORD }}" \
            --set "apiNinjasKey=${{ secrets.API_NINJAS_KEY }}" \
            --set "postgres.pvc.storageClass=${{ secrets.PVC_STORAGE_CLASS }}" \
            backend charts/backend
